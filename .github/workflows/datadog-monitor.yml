- name: Find monitor IDs by tag and perform action
  env:
    DD_API_KEY: ${{ secrets.DATADOG_API_KEY }}
    DD_APP_KEY: ${{ secrets.DATADOG_APP_KEY }}
    ENV_TAG: ${{ github.event.inputs.env }}
    SERVICE_TAG: ${{ github.event.inputs.service }}
    ACTION: ${{ github.event.inputs.action }}
  run: |
    set -euo pipefail

    echo "Querying monitors with: env:${ENV_TAG} service:${SERVICE_TAG}"
    QUERY="env:${ENV_TAG} service:${SERVICE_TAG}"

    RESPONSE=$(curl -s -w "\n%{http_code}" -X GET "https://api.datadoghq.com/api/v1/monitor/search?query=${QUERY}" \
      -H "DD-API-KEY: $DD_API_KEY" \
      -H "DD-APPLICATION-KEY: $DD_APP_KEY" \
      -H "Content-Type: application/json")

    HTTP_BODY=$(echo "$RESPONSE" | sed '$d')
    HTTP_STATUS=$(echo "$RESPONSE" | tail -n1)

    echo "HTTP Status: $HTTP_STATUS"
    echo "API Response: $HTTP_BODY"

    if [ "$HTTP_STATUS" -ne 200 ]; then
      echo "Failed to query monitors. HTTP status: $HTTP_STATUS"
      exit 2
    fi

    MONITOR_IDS=$(echo "$HTTP_BODY" | jq -r '.monitors[]?.id')

    if [ -z "$MONITOR_IDS" ]; then
      echo "No monitors found with env=${ENV_TAG} and service=${SERVICE_TAG}"
      exit 1
    fi

    for MONITOR_ID in $MONITOR_IDS; do
      if [ "$ACTION" == "mute" ]; then
        echo "Muting monitor $MONITOR_ID..."
        curl -s -X POST "https://api.datadoghq.com/api/v1/monitor/${MONITOR_ID}/mute" \
          -H "DD-API-KEY: $DD_API_KEY" \
          -H "DD-APPLICATION-KEY: $DD_APP_KEY" \
          -H "Content-Type: application/json"
      else
        echo "Unmuting monitor $MONITOR_ID..."
        curl -s -X POST "https://api.datadoghq.com/api/v1/monitor/${MONITOR_ID}/unmute" \
          -H "DD-API-KEY: $DD_API_KEY" \
          -H "DD-APPLICATION-KEY: $DD_APP_KEY" \
          -H "Content-Type: application/json"
      fi
    done
